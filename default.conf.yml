---
# Copy this file to conf.yml. This is absolutely necessary for installation.

express_port: 9001
livereload_port: 35729
node_kill: true # Kill lingering Node.js processes at startup.

# timeout_main sets the number of milliseconds to wait for asynchronous tasks to
# complete, particularly the wait before Fepper opens in a browser.
timeout_main: 500

backend:
  synced_dirs:
    # Relative paths to destination directories for code developed in Fepper.
    # - First, plug a backend into Fepper. Put the actual codebase or even just
    #   a symbolic link to the codebase into the backend directory.
    # - Then, enter the paths relative to the backend directory as destinations
    #   for frontend code to be synced by Fepper.
    # - It is recommended to contain the backend codebase within a docroot
    #   directory just below the backend directory. This is so Fepper can serve
    #   static files from the backend as per the webserved_dirs settings.
    # - Do not include "backend" or a leading slash in the directory settings.
    # - Do not include a leading dot in the templates_ext setting.
    # - Note that JavaScripts will only be synced if they are at least one
    #   directory below patternlab-php/source/js. In other words, place
    #   JavaScripts you wish to ignore directly in patternlab-php/source/js and
    #   no deeper.
    # - Use the gulp syncback task to perform the sync.
    #
    # - Examples:
    #css_dir: docroot/themes/theme/css
    #fonts_dir: docroot/themes/theme/fonts
    #images_dir: docroot/themes/theme/images
    #js_dir: docroot/themes/theme/js
    #templates_dir: docroot/themes/theme/templates
    #templates_ext: tpl.php
    css_dir:
    fonts_dir:
    images_dir:
    js_dir:
    templates_dir:
    templates_ext:

  webserved_dirs:
    # Relative paths to the backend directories that will be served by Fepper's
    # webserver.
    # - These directories will just be served; no syncing will occur with them
    #   unless they are also listed in synced_dirs. The assets in webserved_dirs
    #   can be browsed (or included) without having to copy them over into
    #   Pattern Lab.
    # - Be sure a backend is plugged into Fepper.
    # - Create a list of relative paths which are to be served. Each path must
    #   contain the document root and the path from the document root to the
    #   target directory.
    # - Do not include "backend" or a leading slash.
    # - To view the directories' assets in a browser (or to include them in
    #   Pattern Lab files), enter the hostname, port and path minus the document
    #   root.
    # - A version-controlled instance of these settings can be set in data.json
    #   under backend_webserved_dirs.
    # - The backend_webserved_dirs settings in data.json takes precedence over
    #   these settings in conf.yml.
    # - Assuming a host on the web is serving an instance of the backend, a
    #   GitHub Page of this Fepper instance can access those assets if the
    #   gh_pages_path_prefix setting is set in data.json and points correctly to 
    #   that host.
    # - Do not include a trailing slash in gh_pages_path_prefix.
    #
    # - Examples:
    #- docroot/assets
    #- docroot/media

# If using webserved_dirs and publishing to GitHub Pages, the repository name
# must be prefixed to the src of images and other assets in webserved_dirs. This
# value can also be set in data.json and be saved in version control. If both
# are set, the setting in this file will take priority. Be sure to include the
# leading slash in this setting or use a fully qualified domain name.
#gh_pages_path_prefix: /github-repository-name

# It isn't a good idea to change the following values.
enc: utf8
gh_pages_src: .publish/fepper-gh-pages
gh_pages_dest: .publish/gulp-gh-pages
pln: patternlab-node
bld: patternlab-node/builder
pub: patternlab-node/public
src: patternlab-node/source
